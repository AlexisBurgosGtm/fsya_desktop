Imports System.Data.SqlClient
Imports DevExpress
Imports DevExpress.XtraBars.Docking2010.Customization
Imports DevExpress.XtraGrid.Views.Tile
Imports DevExpress.XtraGrid.Views.Tile.ViewInfo
Imports DevExpress.XtraSplashScreen

Public Class ViewDocumentosSUC

    Private Sub ViewDocumentosSUC_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        With Me.cmbSUCURSALES
            .DataSource = getTblEmpresasHost()
            .ValueMember = "CONEXION"
            .DisplayMember = "NOMBRE"
        End With

        Call CargarMesProceso()
        Call CargarTipoDocumentos()

        Me.cmbMesDocumento.SelectedValue = Today.Date.Month
        Me.cmbAnioDocumento.Text = Today.Date.Year.ToString

        Call CargarGrid()

    End Sub


    Private Function AbrirConexionSqlSUC() As Boolean
        If cn.State = ConnectionState.Closed Then
            cn = New SqlConnection(Me.cmbSUCURSALES.SelectedValue.ToString)
            cn.Open()
        End If

        If cn.State = ConnectionState.Connecting Then

        End If

        'Try
        'If cn.State = 0 Then
        'cn.Open()
        'End If
        'Return True
        'Catch ex As Exception
        ' Return False
        ' End Try
    End Function


    Private Sub CargarGrid()
        Me.GridListados.DataSource = Nothing
        Me.GridListados.DataSource = tblDocumentos(Me.cmbTipoDocumento.SelectedValue.ToString)
    End Sub

    Private Sub CargarTipoDocumentos()

        Dim objtTipoDoc As New ClassTipoDocumentos(GlobalEmpNit)
        With Me.cmbTipoDocumento
            .DataSource = objtTipoDoc.tblTipos()
            .ValueMember = "TIPO"
            .DisplayMember = "DESCRIPCION"
        End With

    End Sub

    Public Sub CargarMesProceso()
        Dim tblmeses As New DataTable
        With tblmeses.Columns
            .Add("CODMES", GetType(Integer))
            .Add("DESMES", GetType(String))
        End With

        With tblmeses.Rows
            .Add(New Object() {1, "ENERO"})
            .Add(New Object() {2, "FEBRERO"})
            .Add(New Object() {3, "MARZO"})
            .Add(New Object() {4, "ABRIL"})
            .Add(New Object() {5, "MAYO"})
            .Add(New Object() {6, "JUNIO"})
            .Add(New Object() {7, "JULIO"})
            .Add(New Object() {8, "AGOSTO"})
            .Add(New Object() {9, "SEPTIEMBRE"})
            .Add(New Object() {10, "OCTUBRE"})
            .Add(New Object() {11, "NOVIEMBRE"})
            .Add(New Object() {12, "DICIEMBRE"})
        End With

        With Me.cmbMesDocumento
            .DataSource = tblmeses
            .DisplayMember = "DESMES"
            .ValueMember = "CODMES"
        End With

        Exit Sub

    End Sub 'CARGA EL MES Y AÑO DE PROCESO

    Dim GlobalTipoDoc As String

    Private Function tblDocumentos(ByVal tipodoc As String) As DataTable
        Dim tbl As New DSDOCUMENTOS.tblDocumentosDataTable

        Dim sql As String

        Select Case tipodoc
            Case "TSL" 'TRASLADOS SALIDA BODEGA / AGREGADO DESTINO
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, 
                        DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, 
                        DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, 
                        DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, 
                        DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, 
                        DOCUMENTOS.CODCLIENTE, DOCUMENTOS.CODEMBARQUE AS DOCREF, CODCAJA
                       FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                       WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

            Case "TSS" 'TRASLADOS SALIDA SUCURSAL / AGREGADO DESTINO
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, 
                        DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, 
                        DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, 
                        DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, 
                        DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, 
                        DOCUMENTOS.CODCLIENTE, DOCUMENTOS.CODEMBARQUE AS DOCREF, CODCAJA
                       FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                       WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

            Case "TIN" 'TRASLADOS ENTRADA BODEGA / AGREGADO ORIGEN /CODEMBARQUE
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, 
                        DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, 
                        DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, 
                        DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, 
                        DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, 
                        DOCUMENTOS.CODCLIENTE, DOCUMENTOS.CODEMBARQUE AS DOCREF, CODCAJA
                       FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                       WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

            Case "TES" 'TRASLADOS ENTRADA SUCURSAL / AGREGADO ORIGEN /CODEMBARQUE
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, 
                        DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, 
                        DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, 
                        DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, 
                        DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, 
                        DOCUMENTOS.CODCLIENTE, DOCUMENTOS.CODEMBARQUE AS DOCREF, CODCAJA
                       FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                       WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

            Case "COR"
                sql = "SELECT EMPNIT, 'CORTE' AS CODDOC,CORRELATIVO, FECHA, 'SN' AS NIT, 'SN' AS NOMCLIENTE, 'SN' AS DIRCLIENTE, 'SN' AS MARCA, TOTALCOSTO, TOTALVENTA AS TOTALPRECIO, TOTALTARJETA, HORA, MINUTO, 'CON' AS CONCRE, 'O' AS ST, ID, 0 AS CODCLIENTE,'SN' AS DOCREF, CODCAJA
                        FROM CORTES
                        WHERE (ANIO = @ANIO) AND (MES = @MES) AND (EMPNIT = @EMPNIT) AND ('COR' = @TIPODOC)"

            Case "ORT"
                sql = "SELECT DOCUMENTOS_ORDENTRABAJO.EMPNIT, DOCUMENTOS_ORDENTRABAJO.CODDOC, DOCUMENTOS_ORDENTRABAJO.CORRELATIVO, DOCUMENTOS_ORDENTRABAJO.FECHA, CLIENTES.NIT, CLIENTES.NOMBRECLIENTE AS NOMCLIENTE, 
                            CLIENTES.DIRCLIENTE, DOCUMENTOS_ORDENTRABAJO.ORDEN AS MARCA, 0 AS TOTALCOSTO, DOCUMENTOS_ORDENTRABAJO.IMPORTE AS TOTALPRECIO, 0 AS TOTALTARJETA,CONCAT(DOCUMENTOS_ORDENTRABAJO.HORA,':',DOCUMENTOS_ORDENTRABAJO.MINUTO) AS HORAMINUTO, 
                            'CON' AS CONCRE, DOCUMENTOS_ORDENTRABAJO.ST, DOCUMENTOS_ORDENTRABAJO.ID, DOCUMENTOS_ORDENTRABAJO.CODCLIENTE,'SN' AS DOCREF, CODCAJA
                            FROM DOCUMENTOS_ORDENTRABAJO LEFT OUTER JOIN
                            CLIENTES ON DOCUMENTOS_ORDENTRABAJO.EMPNIT = CLIENTES.EMPNIT AND DOCUMENTOS_ORDENTRABAJO.CODCLIENTE = CLIENTES.CODCLIENTE
                            WHERE (DOCUMENTOS_ORDENTRABAJO.EMPNIT = @EMPNIT) AND (DOCUMENTOS_ORDENTRABAJO.ANIO = @ANIO) AND (DOCUMENTOS_ORDENTRABAJO.MES = @MES) ORDER BY DOCUMENTOS_ORDENTRABAJO.ID"

            Case "FEF"
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, 
                        DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, 
                        DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, 
                        DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, 
                        DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, 
                        DOCUMENTOS.CODCLIENTE, FEL_UUDI AS DOCREF, CODCAJA
                                            FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                                            WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

            Case "FEC"
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, 
                        DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, 
                        DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, 
                        DOCUMENTOS.CODCLIENTE, FEL_UUDI AS DOCREF, CODCAJA
                                            FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                                            WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

            Case "FES"
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, 
                        DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, 
                        DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, 
                        DOCUMENTOS.CODCLIENTE, FEL_UUDI AS DOCREF, CODCAJA
                                            FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                                            WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

            Case "FNC"
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, 
                                            DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, DOCUMENTOS.CODCLIENTE,
                                           FEL_UUDI AS DOCREF, CODCAJA
                                            FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                                            WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

            Case Else
                sql = "SELECT DOCUMENTOS.EMPNIT, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS NOMCLIENTE, 
                                            DOCUMENTOS.DOC_DIRCLIE AS DIRCLIENTE, DOCUMENTOS.MARCA AS MARCA, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.TOTALTARJETA, CONCAT(DOCUMENTOS.HORA,':',DOCUMENTOS.MINUTO) AS HORAMINUTO, DOCUMENTOS.CONCRE, DOCUMENTOS.STATUS AS ST, DOCUMENTOS.ID, DOCUMENTOS.CODCLIENTE,
                                            CONCAT(DOCUMENTOS.SERIEFAC,'-',DOCUMENTOS.NOFAC) AS DOCREF, CODCAJA
                                            FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                                            WHERE (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC) AND (DOCUMENTOS.EMPNIT = @EMPNIT)"

        End Select

        Using cn As New SqlConnection(Me.cmbSUCURSALES.SelectedValue.ToString)
            Try
                If cn.State <> ConnectionState.Open Then
                    cn.Open()
                End If

                Dim cmd As New SqlCommand(sql, cn)
                cmd.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
                If tipodoc <> "ORT" Then
                    cmd.Parameters.AddWithValue("@TIPODOC", Me.cmbTipoDocumento.SelectedValue.ToString)
                End If
                cmd.Parameters.AddWithValue("@ANIO", CType(Me.cmbAnioDocumento.Text, Integer))
                cmd.Parameters.AddWithValue("@MES", CType(Me.cmbMesDocumento.SelectedValue, Integer))
                Dim da As New SqlDataAdapter
                da.SelectCommand = cmd
                da.Fill(tbl)

            Catch ex As Exception

                tbl = Nothing
            End Try
        End Using

        Return tbl

    End Function

    Private Function tblDocumentosExportDetalle(ByVal tipodoc As String) As DataTable
        Dim tbl As New DataTable

        Dim sql As String

        Select Case tipodoc
            Case "TIN"
                sql = "SELECT EMPRESAS.EMPNOMBRE AS ORIGEN, DOCUMENTOS.FECHA, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.CODEMBARQUE AS NITDESTINO, 
                         DOCUMENTOS.DIRENTREGA AS DESTINO, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.OBS, DOCUMENTOS.USUARIO
                FROM    DOCUMENTOS LEFT OUTER JOIN
                         EMPRESAS ON DOCUMENTOS.EMPNIT = EMPRESAS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                WHERE  (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)"
            Case "TSL"
                sql = "SELECT EMPRESAS.EMPNOMBRE AS ORIGEN, DOCUMENTOS.FECHA, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.CODEMBARQUE AS NITDESTINO, 
                         DOCUMENTOS.DIRENTREGA AS DESTINO, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.OBS, DOCUMENTOS.USUARIO
                FROM    DOCUMENTOS LEFT OUTER JOIN
                         EMPRESAS ON DOCUMENTOS.EMPNIT = EMPRESAS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                WHERE  (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)"
            Case "TES"
                sql = "SELECT EMPRESAS.EMPNOMBRE AS ORIGEN, DOCUMENTOS.FECHA, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.CODEMBARQUE AS NITDESTINO, 
                         DOCUMENTOS.DIRENTREGA AS DESTINO, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.OBS, DOCUMENTOS.USUARIO
                FROM    DOCUMENTOS LEFT OUTER JOIN
                         EMPRESAS ON DOCUMENTOS.EMPNIT = EMPRESAS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                WHERE  (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)"
            Case "TSS"
                sql = "SELECT EMPRESAS.EMPNOMBRE AS ORIGEN, DOCUMENTOS.FECHA, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.CODEMBARQUE AS NITDESTINO, 
                         DOCUMENTOS.DIRENTREGA AS DESTINO, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.OBS, DOCUMENTOS.USUARIO
                FROM    DOCUMENTOS LEFT OUTER JOIN
                         EMPRESAS ON DOCUMENTOS.EMPNIT = EMPRESAS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                WHERE  (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)"
            Case "COR"
                sql = "SELECT EMPNIT, 'CORTE' AS CODDOC,CORRELATIVO, FECHA, HORA, MINUTO, USUARIO, TOTALCOSTO, TOTALVENTA, TOTALREPORTADO AS EFECTIVOREPORTADO, TOTALTARJETA, REPORTADOTARJETA, ISNULL(TOTALGASTOS,0) AS TOTALGASTOS, ISNULL(FALTANTE,0) AS FALTANTE, ISNULL(SOBRANTE,0) AS SOBRANTE, OBS
                        FROM CORTES
                        WHERE (ANIO = @ANIO) AND (MES = @MES) AND (EMPNIT = @EMPNIT) AND ('COR' = @TIPODOC)"

            Case "ORT"
                sql = "SELECT DOCUMENTOS_ORDENTRABAJO.EMPNIT, DOCUMENTOS_ORDENTRABAJO.CODDOC, DOCUMENTOS_ORDENTRABAJO.CORRELATIVO, DOCUMENTOS_ORDENTRABAJO.FECHA, CLIENTES.NIT, CLIENTES.NOMBRECLIENTE AS NOMCLIENTE, 
                            CLIENTES.DIRCLIENTE, DOCUMENTOS_ORDENTRABAJO.ORDEN AS MARCA, 0 AS TOTALCOSTO, DOCUMENTOS_ORDENTRABAJO.IMPORTE AS TOTALPRECIO, 0 AS TOTALTARJETA,CONCAT(DOCUMENTOS_ORDENTRABAJO.HORA,':',DOCUMENTOS_ORDENTRABAJO.MINUTO) AS HORAMINUTO, 
                            'CON' AS CONCRE, DOCUMENTOS_ORDENTRABAJO.ST, DOCUMENTOS_ORDENTRABAJO.ID, DOCUMENTOS_ORDENTRABAJO.CODCLIENTE,'SN' AS DOCREF
                            FROM DOCUMENTOS_ORDENTRABAJO LEFT OUTER JOIN
                            CLIENTES ON DOCUMENTOS_ORDENTRABAJO.EMPNIT = CLIENTES.EMPNIT AND DOCUMENTOS_ORDENTRABAJO.CODCLIENTE = CLIENTES.CODCLIENTE
                            WHERE (DOCUMENTOS_ORDENTRABAJO.EMPNIT = @EMPNIT) AND (DOCUMENTOS_ORDENTRABAJO.ANIO = @ANIO) AND (DOCUMENTOS_ORDENTRABAJO.MES = @MES) ORDER BY DOCUMENTOS_ORDENTRABAJO.ID"

            Case Else
                sql = "SELECT DOCUMENTOS.ID, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS CLIENTE, DOCUMENTOS.STATUS, 
                         DOCUMENTOS.CONCRE AS CONTADOCREDITO, DOCUMENTOS.VENCIMIENTO, DOCUMENTOS.TOTALPRECIO AS TOTALVENTA, DOCUMENTOS.TOTALTARJETA, 
                         DOCUMENTOS.TOTALPRECIO + ISNULL(DOCUMENTOS.RECARGOTARJETA, 0) AS IMPORTE, DOCUMENTOS.DOC_SALDO AS SALDODOCUMENTO, DOCUMENTOS.DOC_ABONO AS ABONOSDOCUMENTO, 
                         DOCUMENTOS.TOTALEXENTO, DOCUMENTOS.USUARIO, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.NOCORTE, DOCUMENTOS.CODEMBARQUE AS EMBARQUE_ENVIADOA
                        FROM DOCUMENTOS LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                        WHERE (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)
                        ORDER BY DOCUMENTOS.FECHA, DOCUMENTOS.CORRELATIVO"

        End Select

        Using cn As New SqlConnection(Me.cmbSUCURSALES.SelectedValue.ToString)
            Try
                If cn.State <> ConnectionState.Open Then
                    cn.Open()
                End If

                Dim cmd As New SqlCommand(sql, cn)
                cmd.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
                If tipodoc <> "ORT" Then
                    cmd.Parameters.AddWithValue("@TIPODOC", Me.cmbTipoDocumento.SelectedValue.ToString)
                End If
                cmd.Parameters.AddWithValue("@ANIO", CType(Me.cmbAnioDocumento.Text, Integer))
                cmd.Parameters.AddWithValue("@MES", CType(Me.cmbMesDocumento.SelectedValue, Integer))
                Dim da As New SqlDataAdapter
                da.SelectCommand = cmd
                da.Fill(tbl)

            Catch ex As Exception

                tbl = Nothing
            End Try
        End Using

        Return tbl

    End Function

    Private Function tblDocumentosExport(ByVal tipodoc As String) As DataTable
        Dim tbl As New DataTable

        Dim sql As String

        Select Case tipodoc
            Case "TIN"
                sql = "SELECT EMPRESAS.EMPNOMBRE AS ORIGEN, DOCUMENTOS.FECHA, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.CODEMBARQUE AS NITDESTINO, 
                         DOCUMENTOS.DIRENTREGA AS DESTINO, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.OBS, DOCUMENTOS.USUARIO
                FROM    DOCUMENTOS LEFT OUTER JOIN
                         EMPRESAS ON DOCUMENTOS.EMPNIT = EMPRESAS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                WHERE  (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)"
            Case "TSL"
                sql = "SELECT EMPRESAS.EMPNOMBRE AS ORIGEN, DOCUMENTOS.FECHA, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.CODEMBARQUE AS NITDESTINO, 
                         DOCUMENTOS.DIRENTREGA AS DESTINO, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.OBS, DOCUMENTOS.USUARIO
                FROM    DOCUMENTOS LEFT OUTER JOIN
                         EMPRESAS ON DOCUMENTOS.EMPNIT = EMPRESAS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                WHERE  (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)"
            Case "TES"
                sql = "SELECT EMPRESAS.EMPNOMBRE AS ORIGEN, DOCUMENTOS.FECHA, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.CODEMBARQUE AS NITDESTINO, 
                         DOCUMENTOS.DIRENTREGA AS DESTINO, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.OBS, DOCUMENTOS.USUARIO
                FROM    DOCUMENTOS LEFT OUTER JOIN
                         EMPRESAS ON DOCUMENTOS.EMPNIT = EMPRESAS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                WHERE  (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)"
            Case "TSS"
                sql = "SELECT EMPRESAS.EMPNOMBRE AS ORIGEN, DOCUMENTOS.FECHA, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.CODEMBARQUE AS NITDESTINO, 
                         DOCUMENTOS.DIRENTREGA AS DESTINO, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.OBS, DOCUMENTOS.USUARIO
                FROM    DOCUMENTOS LEFT OUTER JOIN
                         EMPRESAS ON DOCUMENTOS.EMPNIT = EMPRESAS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                WHERE  (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)"
            Case "COR"
                sql = "SELECT EMPNIT, 'CORTE' AS CODDOC,CORRELATIVO, FECHA, HORA, MINUTO, USUARIO, TOTALCOSTO, TOTALVENTA, TOTALREPORTADO AS EFECTIVOREPORTADO, TOTALTARJETA, REPORTADOTARJETA, ISNULL(TOTALGASTOS,0) AS TOTALGASTOS, ISNULL(FALTANTE,0) AS FALTANTE, ISNULL(SOBRANTE,0) AS SOBRANTE, OBS
                        FROM CORTES
                        WHERE (ANIO = @ANIO) AND (MES = @MES) AND (EMPNIT = @EMPNIT) AND ('COR' = @TIPODOC)"

            Case "ORT"
                sql = "SELECT DOCUMENTOS_ORDENTRABAJO.EMPNIT, DOCUMENTOS_ORDENTRABAJO.CODDOC, DOCUMENTOS_ORDENTRABAJO.CORRELATIVO, DOCUMENTOS_ORDENTRABAJO.FECHA, CLIENTES.NIT, CLIENTES.NOMBRECLIENTE AS NOMCLIENTE, 
                            CLIENTES.DIRCLIENTE, DOCUMENTOS_ORDENTRABAJO.ORDEN AS MARCA, 0 AS TOTALCOSTO, DOCUMENTOS_ORDENTRABAJO.IMPORTE AS TOTALPRECIO, 0 AS TOTALTARJETA,CONCAT(DOCUMENTOS_ORDENTRABAJO.HORA,':',DOCUMENTOS_ORDENTRABAJO.MINUTO) AS HORAMINUTO, 
                            'CON' AS CONCRE, DOCUMENTOS_ORDENTRABAJO.ST, DOCUMENTOS_ORDENTRABAJO.ID, DOCUMENTOS_ORDENTRABAJO.CODCLIENTE,'SN' AS DOCREF
                            FROM DOCUMENTOS_ORDENTRABAJO LEFT OUTER JOIN
                            CLIENTES ON DOCUMENTOS_ORDENTRABAJO.EMPNIT = CLIENTES.EMPNIT AND DOCUMENTOS_ORDENTRABAJO.CODCLIENTE = CLIENTES.CODCLIENTE
                            WHERE (DOCUMENTOS_ORDENTRABAJO.EMPNIT = @EMPNIT) AND (DOCUMENTOS_ORDENTRABAJO.ANIO = @ANIO) AND (DOCUMENTOS_ORDENTRABAJO.MES = @MES) ORDER BY DOCUMENTOS_ORDENTRABAJO.ID"

            Case "FEF"
                sql = "SELECT        DOCUMENTOS.ID, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS CLIENTE, DOCUMENTOS.STATUS, 
                         DOCUMENTOS.CONCRE AS CONTADOCREDITO, DOCUMENTOS.VENCIMIENTO, DOCUMENTOS.TOTALPRECIO AS TOTALVENTA, DOCUMENTOS.TOTALTARJETA, 
                         DOCUMENTOS.TOTALPRECIO + ISNULL(DOCUMENTOS.RECARGOTARJETA, 0) AS IMPORTE, DOCUMENTOS.DOC_SALDO AS SALDODOCUMENTO, DOCUMENTOS.DOC_ABONO AS ABONOSDOCUMENTO, 
                         DOCUMENTOS.TOTALEXENTO, DOCUMENTOS.TOTALIVA AS TOTAL_IVA, DOCUMENTOS.TOTALSINIVA AS TOTALPRECIO_MENOS_IVA, DOCUMENTOS.FEL_UUDI, DOCUMENTOS.FEL_SERIE, DOCUMENTOS.FEL_NUMERO, 
                         DOCUMENTOS.FEL_FECHA, DOCUMENTOS.USUARIO, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.NOCORTE, DOCUMENTOS.CODEMBARQUE AS EMBARQUE_ENVIADOA
                        FROM            DOCUMENTOS LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                        WHERE        (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)
                        ORDER BY DOCUMENTOS.FECHA, DOCUMENTOS.CORRELATIVO"
            Case "FEC"
                sql = "SELECT        DOCUMENTOS.ID, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS CLIENTE, DOCUMENTOS.STATUS, 
                         DOCUMENTOS.CONCRE AS CONTADOCREDITO, DOCUMENTOS.VENCIMIENTO, DOCUMENTOS.TOTALPRECIO AS TOTALVENTA, DOCUMENTOS.TOTALTARJETA, 
                         DOCUMENTOS.TOTALPRECIO + ISNULL(DOCUMENTOS.RECARGOTARJETA, 0) AS IMPORTE, DOCUMENTOS.DOC_SALDO AS SALDODOCUMENTO, DOCUMENTOS.DOC_ABONO AS ABONOSDOCUMENTO, 
                         DOCUMENTOS.TOTALEXENTO, DOCUMENTOS.TOTALIVA AS TOTAL_IVA, DOCUMENTOS.TOTALSINIVA AS TOTALPRECIO_MENOS_IVA, DOCUMENTOS.FEL_UUDI, DOCUMENTOS.FEL_SERIE, DOCUMENTOS.FEL_NUMERO, 
                         DOCUMENTOS.FEL_FECHA, DOCUMENTOS.USUARIO, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.NOCORTE, DOCUMENTOS.CODEMBARQUE AS EMBARQUE_ENVIADOA
                        FROM            DOCUMENTOS LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                        WHERE        (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)
                        ORDER BY DOCUMENTOS.FECHA, DOCUMENTOS.CORRELATIVO"
            Case "FES"
                sql = "SELECT        DOCUMENTOS.ID, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS CLIENTE, DOCUMENTOS.STATUS, 
                         DOCUMENTOS.CONCRE AS CONTADOCREDITO, DOCUMENTOS.VENCIMIENTO, DOCUMENTOS.TOTALPRECIO AS TOTALVENTA, DOCUMENTOS.TOTALTARJETA, 
                         DOCUMENTOS.TOTALPRECIO + ISNULL(DOCUMENTOS.RECARGOTARJETA, 0) AS IMPORTE, DOCUMENTOS.DOC_SALDO AS SALDODOCUMENTO, DOCUMENTOS.DOC_ABONO AS ABONOSDOCUMENTO, 
                         DOCUMENTOS.TOTALEXENTO, DOCUMENTOS.TOTALIVA AS TOTAL_IVA, DOCUMENTOS.TOTALSINIVA AS TOTALPRECIO_MENOS_IVA, DOCUMENTOS.FEL_UUDI, DOCUMENTOS.FEL_SERIE, DOCUMENTOS.FEL_NUMERO, 
                         DOCUMENTOS.FEL_FECHA, DOCUMENTOS.USUARIO, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.NOCORTE, DOCUMENTOS.CODEMBARQUE AS EMBARQUE_ENVIADOA
                        FROM            DOCUMENTOS LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                        WHERE        (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)
                        ORDER BY DOCUMENTOS.FECHA, DOCUMENTOS.CORRELATIVO"
            Case "FNC"
                sql = "SELECT        DOCUMENTOS.ID, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS CLIENTE, DOCUMENTOS.STATUS, 
                         DOCUMENTOS.CONCRE AS CONTADOCREDITO, DOCUMENTOS.VENCIMIENTO, DOCUMENTOS.TOTALPRECIO AS TOTALVENTA, DOCUMENTOS.TOTALTARJETA, 
                         DOCUMENTOS.TOTALPRECIO + ISNULL(DOCUMENTOS.RECARGOTARJETA, 0) AS IMPORTE, DOCUMENTOS.DOC_SALDO AS SALDODOCUMENTO, DOCUMENTOS.DOC_ABONO AS ABONOSDOCUMENTO, 
                         DOCUMENTOS.TOTALEXENTO, DOCUMENTOS.TOTALIVA AS TOTAL_IVA, DOCUMENTOS.TOTALSINIVA AS TOTALPRECIO_MENOS_IVA, DOCUMENTOS.FEL_UUDI, DOCUMENTOS.FEL_SERIE, DOCUMENTOS.FEL_NUMERO, 
                         DOCUMENTOS.FEL_FECHA, DOCUMENTOS.USUARIO, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.NOCORTE, DOCUMENTOS.CODEMBARQUE AS EMBARQUE_ENVIADOA
                        FROM            DOCUMENTOS LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                        WHERE        (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)
                        ORDER BY DOCUMENTOS.FECHA, DOCUMENTOS.CORRELATIVO"

            Case Else

                sql = "SELECT DOCUMENTOS.ID, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT AS NIT, DOCUMENTOS.DOC_NOMCLIE AS CLIENTE, DOCUMENTOS.STATUS, 
                         DOCUMENTOS.CONCRE AS CONTADOCREDITO, DOCUMENTOS.VENCIMIENTO, DOCUMENTOS.TOTALPRECIO AS TOTALVENTA, DOCUMENTOS.TOTALTARJETA, 
                         DOCUMENTOS.TOTALPRECIO + ISNULL(DOCUMENTOS.RECARGOTARJETA, 0) AS IMPORTE, DOCUMENTOS.DOC_SALDO AS SALDODOCUMENTO, DOCUMENTOS.DOC_ABONO AS ABONOSDOCUMENTO, 
                         DOCUMENTOS.TOTALEXENTO, DOCUMENTOS.USUARIO, DOCUMENTOS.HORA, DOCUMENTOS.MINUTO, DOCUMENTOS.NOCORTE, DOCUMENTOS.CODEMBARQUE AS EMBARQUE_ENVIADOA
                        FROM DOCUMENTOS LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                        WHERE (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)
                        ORDER BY DOCUMENTOS.FECHA, DOCUMENTOS.CORRELATIVO"
        End Select

        Using cn As New SqlConnection(Me.cmbSUCURSALES.SelectedValue.ToString)
            Try
                If cn.State <> ConnectionState.Open Then
                    cn.Open()
                End If

                Dim cmd As New SqlCommand(sql, cn)
                cmd.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
                If tipodoc <> "ORT" Then
                    cmd.Parameters.AddWithValue("@TIPODOC", Me.cmbTipoDocumento.SelectedValue.ToString)
                End If
                cmd.Parameters.AddWithValue("@ANIO", CType(Me.cmbAnioDocumento.Text, Integer))
                cmd.Parameters.AddWithValue("@MES", CType(Me.cmbMesDocumento.SelectedValue, Integer))
                Dim da As New SqlDataAdapter
                da.SelectCommand = cmd
                da.Fill(tbl)

            Catch ex As Exception

                tbl = Nothing
            End Try
        End Using

        Return tbl

    End Function

    Private Sub CargarListadoCortes(ByVal TipoDoc As String)
        GlobalTipoDoc = TipoDoc
        Me.GridListados.DataSource = Nothing

        Dim tbl As New DataTable()
        tbl.Columns.Add("ID", GetType(Integer))
        tbl.Columns.Add("CODDOC", GetType(String))
        tbl.Columns.Add("CORRELATIVO", GetType(Double))
        tbl.Columns.Add("FECHA", GetType(Date))
        tbl.Columns.Add("TOTALPRECIO", GetType(String))
        tbl.Columns.Add("DOC_NIT", GetType(String))
        tbl.Columns.Add("DOC_NOMCLIE", GetType(String))
        tbl.Columns.Add("DOCUMENTO", GetType(String))
        tbl.Columns.Add("STATUS", GetType(String))
        tbl.Columns.Add("USUARIO", GetType(String))
        tbl.Columns.Add("HORAMINUTO", GetType(String))
        tbl.Columns.Add("MARCA", GetType(String))
        tbl.Columns.Add("CONCRE", GetType(String))

        Call AbrirConexionSql()
        Dim cmd As New SqlCommand("CARGAR_LISTADO_CORTES", cn)
        cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
        cmd.Parameters.AddWithValue("@ANIO", Integer.Parse(Me.cmbAnioDocumento.Text))
        cmd.Parameters.AddWithValue("@MES", Integer.Parse(Me.cmbMesDocumento.SelectedValue))
        Dim dr As SqlDataReader
        dr = cmd.ExecuteReader
        Do While dr.Read
            tbl.Rows.Add(New Object() {
                         Integer.Parse(dr(0)),'ID
                        "CORTE NO. ",'CODDOC
                         Double.Parse(dr(1)),'CORRELATIVO
                         Date.Parse(dr(2)),'FECHA
                         FormatCurrency(dr(3)).ToString,'TOTALPRECIO
                         "SN",'DOC_NIT
                         "SN",'DOC_NOMCLIE
                         "CORTE NO. " & " - " & dr(1).ToString,'DOCUMENTO
                         "I",'STATUS
                         dr(4).ToString,'USUARIO
                         dr(5).ToString & ":" & dr(6).ToString & " horas",'hora en que ingresó 
                         0,
                         0
                         })
        Loop
        dr.Close()
        cmd.Dispose()
        cn.Close()

        Me.GridListados.DataSource = tbl

    End Sub

    Private Sub CargarListadoOrdenesTrabajo()

        Me.GridListados.DataSource = Nothing

        Dim tbl As New DSDOCUMENTOS.tblDocumentosDataTable


        Call AbrirConexionSqlSUC()
        Dim sql As String = "SELECT DOCUMENTOS_ORDENTRABAJO.EMPNIT, DOCUMENTOS_ORDENTRABAJO.CODDOC, DOCUMENTOS_ORDENTRABAJO.CORRELATIVO, DOCUMENTOS_ORDENTRABAJO.FECHA, CLIENTES.NIT, CLIENTES.NOMBRECLIENTE AS NOMCLIENTE, 
                            CLIENTES.DIRCLIENTE, DOCUMENTOS_ORDENTRABAJO.ORDEN AS MARCA, 0 AS TOTALCOSTO, DOCUMENTOS_ORDENTRABAJO.IMPORTE AS TOTALPRECIO, 0 AS TOTALTARJETA,CONCAT(DOCUMENTOS_ORDENTRABAJO.HORA,':',DOCUMENTOS_ORDENTRABAJO.MINUTO) AS HORAMINUTO, 
                            'CON' AS CONCRE, DOCUMENTOS_ORDENTRABAJO.ST, DOCUMENTOS_ORDENTRABAJO.ID, DOCUMENTOS_ORDENTRABAJO.CODCLIENTE
                            FROM DOCUMENTOS_ORDENTRABAJO LEFT OUTER JOIN
                            CLIENTES ON DOCUMENTOS_ORDENTRABAJO.EMPNIT = CLIENTES.EMPNIT AND DOCUMENTOS_ORDENTRABAJO.CODCLIENTE = CLIENTES.CODCLIENTE
                            WHERE (DOCUMENTOS_ORDENTRABAJO.EMPNIT = @EMPNIT) AND (DOCUMENTOS_ORDENTRABAJO.ANIO = @ANIO) AND (DOCUMENTOS_ORDENTRABAJO.MES = @MES) ORDER BY DOCUMENTOS_ORDENTRABAJO.ID"

        Dim cmd As New SqlCommand(sql, cn)

        cmd.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
        cmd.Parameters.AddWithValue("@ANIO", CType(Me.cmbAnioDocumento.Text, Integer))
        cmd.Parameters.AddWithValue("@MES", CType(Me.cmbMesDocumento.SelectedValue, Integer))
        Dim da As New SqlDataAdapter
        da.SelectCommand = cmd
        da.Fill(tbl)

        cmd.Dispose()
        cn.Close()

        Me.GridListados.DataSource = tbl

    End Sub

    Private Function fcn_AnularFacturaElectronica(ByVal coddoc As String, ByVal correlativo As Double) As Boolean

        Dim r As Boolean

        Return r

    End Function

    Private Sub ObtenerDatosDocumento(ByVal Coddoc As String, ByVal Correlativo As Double, ByVal fecha As Date)
        SplashScreenManager.ShowForm(Me.ParentForm, GeneralWaitForm.GetType, True, True, ParentFormState.Locked)
        Call AbrirConexionSqlSUC()
        Dim cmd As New SqlCommand("SELECT DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, DOCUMENTOS.DOC_NIT, DOCUMENTOS.DOC_NOMCLIE, DOCUMENTOS.CODCLIENTE, DOCUMENTOS.CODVEN, 
                            VENDEDORES.NOMVEN, DOCUMENTOS.TOTALCOSTO, DOCUMENTOS.TOTALPRECIO, DOCUMENTOS.CONCRE 
                            FROM DOCUMENTOS LEFT OUTER JOIN VENDEDORES ON DOCUMENTOS.EMPNIT = VENDEDORES.EMPNIT AND DOCUMENTOS.CODVEN = VENDEDORES.CODVEN
                            WHERE (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (DOCUMENTOS.DIA = @DIA) AND (DOCUMENTOS.CODDOC = @CODDOC) AND 
                            (DOCUMENTOS.CORRELATIVO = @CORRELATIVO)", cn)
        cmd.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
        cmd.Parameters.AddWithValue("@ANIO", fecha.Year)
        cmd.Parameters.AddWithValue("@MES", fecha.Month)
        cmd.Parameters.AddWithValue("@DIA", fecha.Day)
        cmd.Parameters.AddWithValue("@CODDOC", Coddoc)
        cmd.Parameters.AddWithValue("@CORRELATIVO", Correlativo)
        Dim dr As SqlDataReader = cmd.ExecuteReader
        dr.Read()
        Try
            If dr.HasRows Then
                SelectedCoddoc = dr(0).ToString
                Form1.txtVentasCorrelativo.Text = dr(1)
                Form1.txtVentasFecha.DateTime = Date.Parse(dr(2))
                Form1.txtVentasNitClie.Text = dr(3).ToString
                Form1.txtVentasNombre.Text = dr(4).ToString
                Form1.txtVentasCodCliente.Text = dr(5)
                Form1.cmbVentasVendedor.SelectedValue = Integer.Parse(dr(6))
                Form1.cmbVentasVendedor.Text = dr(7).ToString
                Form1.LbTotalCosto.Text = FormatNumber(dr(8), 2)
                Form1.LbTotalVenta.Text = FormatNumber(dr(9), 2)
            End If
        Catch ex As Exception

        End Try
        dr.Close()
        cmd.Dispose()

        'INSERTO EL DETALLE DE PRODUCTOS EN EL GRID TEMP VENTAS
        Dim CMD2 As New SqlCommand("INSERT INTO TEMP_VENTAS (EMPNIT,CODDOC,CORRELATIVO,CODPROD,DESPROD,CODMEDIDA,EQUIVALE,CANTIDAD,TOTALUNIDADES,COSTO,PRECIO,TOTALCOSTO,TOTALPRECIO,BONIF,TOTALBONIF) SELECT EMPNIT,CODDOC,CORRELATIVO,CODPROD,DESPROD,CODMEDIDA,EQUIVALE,CANTIDAD,TOTALUNIDADES,COSTO,PRECIO,TOTALCOSTO,TOTALPRECIO,CANTIDADBONIF,TOTALBONIF FROM DOCPRODUCTOS WHERE EMPNIT='" & GlobalEmpNit & "' AND CODDOC='" & Coddoc & "' AND CORRELATIVO=" & Correlativo & " AND ANIO=" & fecha.Year & " AND MES=" & fecha.Month & " AND DIA=" & fecha.Day, cn)
        CMD2.ExecuteNonQuery()
        CMD2.Dispose()

        Call CargarGridTempVentas()

        SplashScreenManager.CloseForm()
    End Sub

    Private Sub cmbTipoDocumento_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cmbTipoDocumento.SelectedIndexChanged
        Try
            GlobalTipoDoc = Me.cmbTipoDocumento.SelectedValue.ToString

            Me.GridListados.DataSource = Nothing
            Me.GridListados.DataSource = tblDocumentos(Me.cmbTipoDocumento.SelectedValue.ToString)

        Catch ex As Exception

        End Try

    End Sub

    Dim drw As DataRow
    Private Sub GridViewListados_FocusedRowChanged(sender As Object, e As XtraGrid.Views.Base.FocusedRowChangedEventArgs) Handles GridViewListados.FocusedRowChanged
        Try

            drw = Nothing
            drw = Me.GridViewListados.GetFocusedDataRow

            Call CargarDatos(drw)

        Catch ex As Exception

        End Try
    End Sub

    Dim SelectedCodcliente As Integer
    Dim SelectedUUDI As String = ""

    Private Sub CargarDatos(ByVal dr As DataRow)
        SelectedCode = CType(dr.Item(14), Integer)
        SelectedFecha = Date.Parse(dr.Item(3))
        SelectedCoddoc = dr.Item(1).ToString
        SelectedCorrelativo = CType(dr.Item(2), Double)
        SelectedStatusDoc = dr.Item(13).ToString
        SelectedNitCliente = dr.Item(4).ToString
        SelectedNomCliente = dr.Item(5).ToString
        SelectedDocImporte = CType(dr.Item(9), Double)
        SelectedDocConCre = dr.Item(12).ToString
        SelectedCodcliente = CType(dr.Item(15), Integer)
        SelectedUUDI = dr.Item(16).ToString

        Try
            SelectedMarcado = dr.Item(7).ToString

            If SelectedMarcado = "SI" Then
                Me.BarButRadMenListadosObsMarca.Enabled = True
            Else
                Me.BarButRadMenListadosObsMarca.Enabled = False
            End If

        Catch ex As Exception

        End Try

    End Sub

    Private Sub GridViewListados_DoubleClick(sender As Object, e As EventArgs) Handles GridViewListados.DoubleClick

        Call CargarDatos(drw)

        Me.RadialMenuListados.ShowPopup(MousePosition)

        Select Case Me.cmbTipoDocumento.SelectedValue.ToString
            Case "COT"
                Me.BarButRadMenListadosEmail.Enabled = True
            Case "FAC"
                Me.btnMenuCambiarCliente.Enabled = True
                Me.BarButRadMenListadosEmail.Enabled = False
            Case "FEF"
                Me.btnMenuCertificar.Enabled = True
                Me.btnMenuCambiarCliente.Enabled = True
                Me.BarButRadMenListadosEmail.Enabled = False
            Case "FEC"
                Me.btnMenuCertificar.Enabled = True
                Me.btnMenuCambiarCliente.Enabled = True
                Me.BarButRadMenListadosEmail.Enabled = False
            Case "FNC"
                Me.btnMenuCertificar.Enabled = True
                Me.BarButRadMenListadosEmail.Enabled = False
            Case Else
                Me.btnMenuCertificar.Enabled = False
                Me.btnMenuCambiarCliente.Enabled = False
                Me.BarButRadMenListadosEmail.Enabled = False
        End Select

    End Sub

    Private Sub CargarListadoDocumento(ByVal TipoDoc As String)
        GlobalTipoDoc = TipoDoc
        Me.GridListados.DataSource = Nothing

        If TipoDoc = "COT" Then
            Me.BarButRadMenListadosEliminar.Enabled = True
        Else
            Me.BarButRadMenListadosEliminar.Enabled = False
        End If

        Dim tbl As New DataTable()
        tbl.Columns.Add("ID", GetType(Integer))
        tbl.Columns.Add("CODDOC", GetType(String))
        tbl.Columns.Add("CORRELATIVO", GetType(Double))
        tbl.Columns.Add("FECHA", GetType(Date))
        tbl.Columns.Add("TOTALPRECIO", GetType(String))
        tbl.Columns.Add("DOC_NIT", GetType(String))
        tbl.Columns.Add("DOC_NOMCLIE", GetType(String))
        tbl.Columns.Add("DOCUMENTO", GetType(String))
        tbl.Columns.Add("STATUS", GetType(String))
        tbl.Columns.Add("USUARIO", GetType(String))
        tbl.Columns.Add("HORAMINUTO", GetType(String))
        tbl.Columns.Add("MARCA", GetType(String))
        tbl.Columns.Add("CONCRE", GetType(String))

        Call AbrirConexionSqlSUC()
        Dim sql As String = "SELECT DOCUMENTOS.ID, DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, (DOCUMENTOS.TOTALPRECIO + ISNULL(DOCUMENTOS.RECARGOTARJETA,0)) AS TOTALPRECIO, DOCUMENTOS.DOC_NIT, DOCUMENTOS.DOC_NOMCLIE, DOCUMENTOS.STATUS, DOCUMENTOS.USUARIO,DOCUMENTOS.HORA, DOCUMENTOS.MINUTO,DOCUMENTOS.MARCA, DOCUMENTOS.CONCRE
                                FROM DOCUMENTOS LEFT OUTER JOIN TIPODOCUMENTOS ON DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT AND DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC
                                WHERE (DOCUMENTOS.EMPNIT = @EMPNIT) AND (DOCUMENTOS.ANIO = @ANIO) AND (DOCUMENTOS.MES = @MES) AND (TIPODOCUMENTOS.TIPODOC = @TIPODOC)
                                ORDER BY DOCUMENTOS.fecha, DOCUMENTOS.CORRELATIVO"
        Dim cmd As New SqlCommand(sql, cn)
        'cmd.CommandType = CommandType.StoredProcedure
        cmd.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
        cmd.Parameters.AddWithValue("@ANIO", Integer.Parse(Me.cmbAnioDocumento.Text))
        cmd.Parameters.AddWithValue("@MES", Integer.Parse(Me.cmbMesDocumento.SelectedValue))
        cmd.Parameters.AddWithValue("@TIPODOC", TipoDoc)
        Dim dr As SqlDataReader
        dr = cmd.ExecuteReader
        Do While dr.Read
            tbl.Rows.Add(New Object() {
                         Integer.Parse(dr(0)),'ID
                         dr(1).ToString,'CODDOC
                         Double.Parse(dr(2)),'CORRELATIVO
                         Date.Parse(dr(3)),'FECHA
                         FormatCurrency(dr(4)).ToString,'TOTALPRECIO
                         dr(5).ToString,'DOC_NIT
                         dr(6).ToString,'DOC_NOMCLIE
                         dr(1).ToString & " - " & dr(2).ToString,'DOCUMENTO
                         dr(7).ToString,'STATUS
                         dr(8).ToString,
                         dr(9).ToString & ":" & dr(10).ToString & " horas",'hora en que ingresó 
                         dr(11).ToString, 'marca
                         dr(12).ToString 'CON CRE
                         })
        Loop
        dr.Close()
        cmd.Dispose()
        cn.Close()

        Me.GridListados.DataSource = tbl

    End Sub

    Private Sub GridViewListados_KeyDown(sender As Object, e As KeyEventArgs) Handles GridViewListados.KeyDown
        If e.KeyCode = Keys.Enter Then

            Me.RadialMenuListados.ShowPopup(MousePosition)

            Select Case Me.cmbTipoDocumento.SelectedValue.ToString
                Case "COT"
                    Me.BarButRadMenListadosEmail.Enabled = True
                Case "FAC"
                    Me.btnMenuCambiarCliente.Enabled = True
                    Me.BarButRadMenListadosEmail.Enabled = False
                Case "FEF"
                    Me.btnMenuCertificar.Enabled = True
                    Me.btnMenuCambiarCliente.Enabled = True
                    Me.BarButRadMenListadosEmail.Enabled = False
                Case "FEC"
                    Me.btnMenuCertificar.Enabled = True
                    Me.btnMenuCambiarCliente.Enabled = True
                    Me.BarButRadMenListadosEmail.Enabled = False
                Case "FNC"
                    Me.btnMenuCertificar.Enabled = True
                    Me.BarButRadMenListadosEmail.Enabled = False
                Case Else
                    Me.btnMenuCertificar.Enabled = False
                    Me.btnMenuCambiarCliente.Enabled = False
                    Me.BarButRadMenListadosEmail.Enabled = False
            End Select
        End If
    End Sub

    Private Sub cmbMesDocumento_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cmbMesDocumento.SelectedIndexChanged
        Try
            GlobalTipoDoc = Me.cmbTipoDocumento.SelectedValue.ToString

            Me.GridListados.DataSource = Nothing
            Me.GridListados.DataSource = tblDocumentos(Me.cmbTipoDocumento.SelectedValue.ToString)

        Catch ex As Exception

        End Try
    End Sub

    Private Sub cmbAnioDocumento_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cmbAnioDocumento.SelectedIndexChanged
        Try
            GlobalTipoDoc = Me.cmbTipoDocumento.SelectedValue.ToString

            Me.GridListados.DataSource = Nothing
            Me.GridListados.DataSource = tblDocumentos(Me.cmbTipoDocumento.SelectedValue.ToString)

        Catch ex As Exception

        End Try
    End Sub

    Private Sub btnExportarExcel_Click(sender As Object, e As EventArgs) Handles btnExportarExcel.Click

        Try
            Me.GridExports.Refresh()
            Me.GridExports.DataSource = Nothing
            Me.GridExports.DataSource = tblDocumentosExport(Me.cmbTipoDocumento.SelectedValue.ToString)
            Me.GridExports.ExportToXlsx(Application.StartupPath + "/EXPORTS/" + Me.cmbTipoDocumento.Text.ToString + ".xlsx")
            Me.GridExports.DataSource = Nothing

            Process.Start(Application.StartupPath + "/EXPORTS/" + Me.cmbTipoDocumento.Text.ToString + ".xlsx")

        Catch ex As Exception
            MsgBox("Error al exportar datos. Error: " + ex.ToString)
        End Try

    End Sub

    Private Sub btnExportarDetalle_Click(sender As Object, e As EventArgs) Handles btnExportarDetalle.Click
        Try
            Me.GridExports.Refresh()
            Me.GridExports.DataSource = Nothing
            Me.GridExports.DataSource = tblDocumentosExportDetalle(Me.cmbTipoDocumento.SelectedValue.ToString)
            Me.GridExports.ExportToXlsx(Application.StartupPath + "/EXPORTS/" + Me.cmbTipoDocumento.Text.ToString + ".xlsx")
            Me.GridExports.DataSource = Nothing

            Process.Start(Application.StartupPath + "/EXPORTS/" + Me.cmbTipoDocumento.Text.ToString + ".xlsx")

        Catch ex As Exception
            MsgBox("Error al exportar datos. Error: " + ex.ToString)
        End Try


    End Sub

#Region " *** RADIAL MENU *** "

    Dim SelectedStatusDoc As String
    Dim SelectedMarcado As String
    Dim SelectedDocImporte As Double
    Dim SelectedDocConCre As String
    Dim SelectedNitCliente As String
    Dim SelectedNomCliente As String

    '***************************************
    '** BOTON IMPRIMIR *********************
    '***************************************
    Private Sub BarButRadMenListadosImprimir_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButRadMenListadosImprimir.ItemClick
        Dim ObjReports As New ClassReports

        Select Case GlobalTipoDoc
            Case "FAC"
                If AbrirReporte_Ticket(SelectedFecha, SelectedCoddoc, SelectedCorrelativo, 2) = True Then
                Else
                    MsgBox("No se pudo cargar el documento. Error :" & GlobalDesError)
                End If

            Case "FEF"
                If SelectedUUDI <> "" Then
                    Process.Start(GlobalInfileUrl + SelectedUUDI)
                    'abre el reporte imprimible FEL
                    Dim fel As New classFEL
                    fel.rptFacturaFEL(SelectedCoddoc, SelectedCorrelativo, 2)

                Else
                    If AbrirReporte_Ticket(SelectedFecha, SelectedCoddoc, SelectedCorrelativo, 2) = True Then
                    Else
                        MsgBox("No se pudo cargar el documento. Error :" & GlobalDesError)
                    End If
                End If

            Case "FEC"
                If SelectedUUDI <> "" Then
                    Process.Start(GlobalInfileUrl + SelectedUUDI)
                    'abre el reporte imprimible FEL
                    Dim fel As New classFEL
                    fel.rptFacturaFEL(SelectedCoddoc, SelectedCorrelativo, 2)
                Else
                    If AbrirReporte_Ticket(SelectedFecha, SelectedCoddoc, SelectedCorrelativo, 2) = True Then
                    Else
                        MsgBox("No se pudo cargar el documento. Error :" & GlobalDesError)
                    End If
                End If
            Case "FES"
                If SelectedUUDI <> "" Then
                    Process.Start(GlobalInfileUrl + SelectedUUDI)
                    'abre el reporte imprimible FEL
                    Dim fel As New classFEL
                    fel.rptFacturaFEL(SelectedCoddoc, SelectedCorrelativo, 2)
                Else
                    If AbrirReporte_Ticket(SelectedFecha, SelectedCoddoc, SelectedCorrelativo, 2) = True Then
                    Else
                        MsgBox("No se pudo cargar el documento. Error :" & GlobalDesError)
                    End If
                End If
            Case "FNC"
                If SelectedUUDI <> "" Then
                    Process.Start(GlobalInfileUrl + SelectedUUDI)
                Else
                    If rptDevolucionVenta(SelectedCoddoc, SelectedCorrelativo) = True Then
                    Else
                        MsgBox("No se pudo cargar el formato. Error: " & GlobalDesError)
                    End If
                End If

            Case "DEV"
                If rptDevolucionVenta(SelectedCoddoc, SelectedCorrelativo) = True Then
                Else
                    MsgBox("No se pudo cargar el formato. Error: " & GlobalDesError)
                End If
            Case "COT"
                Call AbrirReporte_Cotizacion(SelectedFecha, SelectedCoddoc, SelectedCorrelativo, 2)
            Case "COM"
                Call AbrirReporteCompra(SelectedFecha, SelectedCoddoc, SelectedCorrelativo, "COMPRAS")
            Case "OCM"
                Call AbrirReporteCompra(SelectedFecha, SelectedCoddoc, SelectedCorrelativo, "ORDENCOMPRA")
            Case "ENV"
                If rptEnviosTicket(SelectedFecha, SelectedCoddoc, SelectedCorrelativo, 2) = True Then
                Else
                    MsgBox("No se pudo cargar el documento. Error :" & GlobalDesError)
                End If
            Case "COR"
                Try
                    Call AbrirReporteCuadre(SelectedFecha, SelectedCorrelativo)
                Catch ex As Exception
                    MsgBox(ex.ToString)
                End Try

                Call Report_DocumentosCorte(GlobalEmpNit, SelectedCorrelativo)
                Call Report_ProductosCorte(GlobalEmpNit, SelectedCorrelativo)

            Case "GAS"
                Call AbrirReporte_ValeGasto(SelectedFecha, SelectedCorrelativo)
            Case "ENT"
                Call AbrirReporte_MovInv(SelectedFecha, SelectedCoddoc, SelectedCorrelativo)
            Case "SAL"
                Call AbrirReporte_MovInv(SelectedFecha, SelectedCoddoc, SelectedCorrelativo)

            Case "TIN"
                Call AbrirReporte_MovInv(SelectedFecha, SelectedCoddoc, SelectedCorrelativo)
            Case "TSL"
                Call AbrirReporte_MovInv(SelectedFecha, SelectedCoddoc, SelectedCorrelativo)

            Case "TES"
                Call AbrirReporte_MovInv(SelectedFecha, SelectedCoddoc, SelectedCorrelativo)
            Case "TSS"
                Call AbrirReporte_MovInv(SelectedFecha, SelectedCoddoc, SelectedCorrelativo)

            Case "INF"
                Dim oInvF As New classInvFisico(GlobalEmpNit, CType(Me.cmbAnioDocumento.SelectedValue, Integer), CType(Me.cmbMesDocumento.SelectedValue, Integer))
                oInvF.rptInvFisico(SelectedCoddoc, SelectedCorrelativo)

            Case "RCC"
                ObjReports.rptReciboCliente(GlobalEmpNit, SelectedFecha, SelectedCoddoc, SelectedCorrelativo)

            Case "RCP"
                ObjReports.rptReciboProveedor(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo)

            Case "ORT"
                Dim objOrtrab As New classOrdenTrabajo(GlobalEmpNit)
                objOrtrab.rptOrdenTrabajo(SelectedCoddoc, SelectedCorrelativo)
            Case "ORP"
                'Dim objOrtrab As New classOrdenTrabajo(GlobalEmpNit)
                'objOrtrab.rptOrdenTrabajo(SelectedCoddoc, SelectedCorrelativo)
                MsgBox("DOCUMENTO EN PROCESO")
        End Select

    End Sub


    '***************************************
    '** BOTON EXPORTAR ***********************
    '***************************************
    Private Sub BatButRadMenExportar_ItemClick(sender As Object, e As XtraBars.ItemClickEventArgs) Handles BatButRadMenExportar.ItemClick
        If Confirmacion("¿Está seguro que desea Exportar este documento?", Me.ParentForm) = True Then

            Dim sql As String = ""
            Select Case GlobalTipoDoc

                Case "INF"
                    sql = "SELECT DOCUMENTOS.CODDOC, DOCUMENTOS.CORRELATIVO, DOCUMENTOS.FECHA, EMPLEADOS.NOMEMPLEADO AS EMPLEADO, DOCPRODUCTOS.CODPROD AS CODIGO, DOCPRODUCTOS.DESPROD AS PRODUCTO, 
                         (DOCPRODUCTOS.TOTALBONIF + (DOCPRODUCTOS.TOTALUNIDADES *-1)) AS SISTEMA, DOCPRODUCTOS.TOTALUNIDADES AS AJUSTE, DOCPRODUCTOS.TOTALCOSTO AS COSTOAJUSTE, DOCPRODUCTOS.TOTALBONIF AS CONTEO, DOCPRODUCTOS.TOTALPRECIO AS COSTOCONT, 
                         DOCPRODUCTOS.OBS AS OBSERVACIONES
                        FROM DOCUMENTOS LEFT OUTER JOIN
                         EMPLEADOS ON DOCUMENTOS.CODVEN = EMPLEADOS.CODTIPOEMPLEADO AND DOCUMENTOS.EMPNIT = EMPLEADOS.EMPNIT LEFT OUTER JOIN
                         DOCPRODUCTOS ON DOCUMENTOS.MES = DOCPRODUCTOS.MES AND DOCUMENTOS.ANIO = DOCPRODUCTOS.ANIO AND DOCUMENTOS.CORRELATIVO = DOCPRODUCTOS.CORRELATIVO AND 
                         DOCUMENTOS.CODDOC = DOCPRODUCTOS.CODDOC AND DOCUMENTOS.EMPNIT = DOCPRODUCTOS.EMPNIT LEFT OUTER JOIN
                         TIPODOCUMENTOS ON DOCUMENTOS.CODDOC = TIPODOCUMENTOS.CODDOC AND DOCUMENTOS.EMPNIT = TIPODOCUMENTOS.EMPNIT
                        WHERE (DOCUMENTOS.EMPNIT = @E) AND (DOCUMENTOS.CODDOC = @D) AND (DOCUMENTOS.CORRELATIVO = @N) AND (TIPODOCUMENTOS.TIPODOC = 'INF')"
                Case Else
                    MsgBox("Opción no disponible para este documento")
            End Select

            Using cn As New SqlConnection(Me.cmbSUCURSALES.SelectedValue.ToString)
                Try
                    Dim tbl As New DataTable

                    If cn.State <> ConnectionState.Open Then
                        cn.Open()
                    End If

                    Dim cmd As New SqlCommand(sql, cn)
                    cmd.Parameters.AddWithValue("@E", GlobalEmpNit)
                    cmd.Parameters.AddWithValue("@D", SelectedCoddoc)
                    cmd.Parameters.AddWithValue("@N", SelectedCorrelativo)
                    Dim da As New SqlDataAdapter
                    da.SelectCommand = cmd
                    da.Fill(tbl)

                    Dim archivo As String = Application.StartupPath + "\EXPORTS\" + "Documento-" + SelectedCoddoc + "-" + SelectedCorrelativo.ToString + ".xlsx"
                    Me.GridExports.Refresh()
                    Me.GridExports.DataSource = Nothing
                    Me.GridExports.DataSource = tbl
                    Me.GridExports.ExportToXlsx(archivo)
                    Process.Start(archivo)

                Catch ex As Exception
                    MsgBox("Error al exportar. " & ex.ToString)
                End Try
            End Using
        End If
    End Sub

    '***************************************
    '** BOTON ANULAR ***********************
    '***************************************
    Private Sub BarButRadMenListadosAnular_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButRadMenListadosAnular.ItemClick

        'MsgBox(drw.Item(16).ToString)

        Select Case GlobalTipoDoc
            Case "FEF" 'FACTURA IVA (12) ELECTRONICA NORMAL

                If drw.Item(16).ToString <> "" Then
                    MsgBox("Está a punto de anular una Factura Electrónica Normal",, "AVISO")

                    If Confirmacion("¿Está seguro que desea Anular un Documento Electrónico?", Me.ParentForm) = True Then
                        If FlyoutDialog.Show(Me.ParentForm, New ViewClave(Form1.txtConfigClaveVerificaExistencia.Text)) = DialogResult.OK Then

                            Dim objFEL As New classFEL
                            If objFEL.AnularFacturaFEL(SelectedCoddoc, SelectedCorrelativo) = True Then
                                MsgBox("Anulacion realizada exitosamente")
                                'abre la página con la factura
                                Process.Start(GlobalInfileUrl + drw.Item(16).ToString)

                                '******* ANULACION INTERNA DEL DOCUMENTO ****************
                                Call AbrirConexionSql()

                                Dim ST As String
                                If SelectedStatusDoc = "A" Then
                                    ST = "O"
                                Else
                                    ST = "A"
                                End If

                                Dim cmd As New SqlCommand("UPDATE DOCUMENTOS SET STATUS='" & ST & "' WHERE EMPNIT='" & GlobalEmpNit & "' AND ID=" & SelectedCode, cn)
                                cmd.ExecuteNonQuery()
                                cmd.Dispose()
                                cn.Close()


                                Dim ClassDoc As New ClassDocumentos
                                If ST = "A" Then
                                    If ClassDoc.DevolverInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                                        MsgBox(GlobalDesError)
                                    End If
                                Else
                                    If ClassDoc.SacarInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                                        MsgBox(GlobalDesError)
                                    End If
                                End If

                                Call CargarGrid()

                                '****************************************************
                            Else
                                MsgBox("Lo siento, no se puede Anular este documento, verifique su conexion a internet e inténtelo de nuevo")
                            End If


                        End If
                    End If
                Else
                    If getConfirmacion("¿No se anuló en la SAT, desea anularlo localmente?") = True Then
                    Else
                        Exit Sub
                    End If

                    'si no está certificada se anula internamente nada mas
                    '******* ANULACION INTERNA DEL DOCUMENTO ****************
                    Call AbrirConexionSql()

                    Dim ST As String
                    If SelectedStatusDoc = "A" Then
                        ST = "O"
                    Else
                        ST = "A"
                    End If

                    Dim cmd As New SqlCommand("UPDATE DOCUMENTOS SET STATUS='" & ST & "' WHERE EMPNIT='" & GlobalEmpNit & "' AND ID=" & SelectedCode, cn)
                    cmd.ExecuteNonQuery()
                    cmd.Dispose()
                    cn.Close()


                    Dim ClassDoc As New ClassDocumentos
                    If ST = "A" Then
                        If ClassDoc.DevolverInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                            MsgBox(GlobalDesError)
                        End If
                    Else
                        If ClassDoc.SacarInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                            MsgBox(GlobalDesError)
                        End If
                    End If

                    Call CargarGrid()

                    '****************************************************
                End If



            Case "FEC" 'FACTURA CAMBIARIA IVA(12) ELECTRONICA
                If drw.Item(16).ToString <> "" Then
                    'anula el documento electrónico
                    MsgBox("Está a punto de anular una Factura Electrónica Cambiaria",, "AVISO")

                    If Confirmacion("¿Está seguro que desea Anular un Documento Electrónico?", Me.ParentForm) = True Then
                        If FlyoutDialog.Show(Me.ParentForm, New ViewClave(Form1.txtConfigClaveVerificaExistencia.Text)) = DialogResult.OK Then

                            Dim objFEL As New classFEL
                            If objFEL.AnularFacturaFEL(SelectedCoddoc, SelectedCorrelativo) = True Then
                                MsgBox("Anulacion realizada exitosamente")
                                'abre la página con la factura
                                Process.Start(GlobalInfileUrl + drw.Item(16).ToString)
                            Else
                                MsgBox("Lo siento, no se puede Anular este documento, verifique su conexion a internet e inténtelo de nuevo")
                            End If

                            '******* ANULACION INTERNA DEL DOCUMENTO ****************
                            Call AbrirConexionSql()

                            Dim ST As String
                            If SelectedStatusDoc = "A" Then
                                ST = "O"
                            Else
                                ST = "A"
                            End If

                            Dim cmd As New SqlCommand("UPDATE DOCUMENTOS SET STATUS='" & ST & "' WHERE EMPNIT='" & GlobalEmpNit & "' AND ID=" & SelectedCode, cn)
                            cmd.ExecuteNonQuery()
                            cmd.Dispose()
                            cn.Close()


                            Dim ClassDoc As New ClassDocumentos
                            If ST = "A" Then
                                If ClassDoc.DevolverInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                                    MsgBox(GlobalDesError)
                                End If
                            Else
                                If ClassDoc.SacarInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                                    MsgBox(GlobalDesError)
                                End If
                            End If

                            Call CargarGrid()
                            '****************************************************

                        End If
                    End If
                Else
                    If getConfirmacion("¿No se anuló en la SAT, desea anularlo localmente?") = True Then
                    Else
                        Exit Sub
                    End If

                    'anula internamente el documento
                    '******* ANULACION INTERNA DEL DOCUMENTO ****************
                    Call AbrirConexionSql()

                    Dim ST As String
                    If SelectedStatusDoc = "A" Then
                        ST = "O"
                    Else
                        ST = "A"
                    End If

                    Dim cmd As New SqlCommand("UPDATE DOCUMENTOS SET STATUS='" & ST & "' WHERE EMPNIT='" & GlobalEmpNit & "' AND ID=" & SelectedCode, cn)
                    cmd.ExecuteNonQuery()
                    cmd.Dispose()
                    cn.Close()


                    Dim ClassDoc As New ClassDocumentos
                    If ST = "A" Then
                        If ClassDoc.DevolverInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                            MsgBox(GlobalDesError)
                        End If
                    Else
                        If ClassDoc.SacarInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                            MsgBox(GlobalDesError)
                        End If
                    End If

                    Call CargarGrid()
                    '****************************************************

                End If


            Case "FNC" 'NOTA DE CREDITO ELECTRONICA
                MsgBox("Opcion en construcción")

            Case "FAC"

                GoTo ANULACION_FAC
            Case "COM"
                GoTo ANULACION
            Case "OCM"
                GoTo ANULACION

            Case "ENV"

                GoTo ANULACION
            Case "DEV"
                MsgBox("No puedes anular una Devolución, debes eliminarla")
            Case "COR"
                MsgBox("Este tipo de documento no se puede Anular")

            Case "GAS"
                MsgBox("Esta opción estará disponible muy pronto")

            Case "ENT"
                MsgBox("Esta opción estará disponible muy pronto")

            Case "SAL"
                MsgBox("Esta opción estará disponible muy pronto")

            Case "COT"
                MsgBox("Este tipo de documento no se puede Anular")
            Case "RCC"
                MsgBox("Este tipo de documento no se puede Anular")
            Case "ORT"
                MsgBox("Esta opción No está disponible para este tipo de Documento")
            Case Else
                MsgBox("Este tipo de documento no se puede Anular")
        End Select

        Exit Sub

ANULACION:
        If Confirmacion("¿Está seguro que desea Anular este Documento?", Me.ParentForm) = True Then

            If FlyoutDialog.Show(Me.ParentForm, New ViewClave(Form1.txtConfigClaveVerificaExistencia.Text)) = DialogResult.OK Then

                Call AbrirConexionSql()
                Dim ST As String
                If SelectedStatusDoc = "A" Then
                    ST = "O"
                Else
                    ST = "A"
                End If
                Dim cmd As New SqlCommand("UPDATE DOCUMENTOS SET STATUS='" & ST & "' WHERE EMPNIT='" & GlobalEmpNit & "' AND ID=" & SelectedCode, cn)
                cmd.ExecuteNonQuery()
                cmd.Dispose()
                cn.Close()

                'Call CargarListadoDocumento(GlobalTipoDoc)
                Call CargarGrid()


            End If
        End If

ANULACION_FAC:
        If Confirmacion("¿Está seguro que desea Anular este Documento?", Me.ParentForm) = True Then

            If FlyoutDialog.Show(Me.ParentForm, New ViewClave(Form1.txtConfigClaveVerificaExistencia.Text)) = DialogResult.OK Then

                Call AbrirConexionSql()
                Dim ST As String
                If SelectedStatusDoc = "A" Then
                    ST = "O"
                Else
                    ST = "A"
                End If

                Dim cmd As New SqlCommand("UPDATE DOCUMENTOS SET STATUS='" & ST & "' WHERE EMPNIT='" & GlobalEmpNit & "' AND ID=" & SelectedCode, cn)
                cmd.ExecuteNonQuery()
                cmd.Dispose()
                cn.Close()


                Dim ClassDoc As New ClassDocumentos
                If ST = "A" Then
                    If ClassDoc.DevolverInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                        MsgBox(GlobalDesError)
                    End If
                Else
                    If ClassDoc.SacarInvFac(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue)) = False Then
                        MsgBox(GlobalDesError)
                    End If
                End If

                Call CargarGrid()

            End If
        End If


    End Sub

    '** BOTON MARCAR ***********************
    Private Sub BarButRadMenListadosMarcar_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButRadMenListadosMarcar.ItemClick

        If SelectedMarcado = "SI" Then
            If Confirmacion("¿Está seguro que desea des-marcar este documento?", Me.ParentForm) = True Then
                Call AbrirConexionSql()
                Dim cmd As New SqlCommand("UPDATE DOCUMENTOS SET MARCA='NO', OBSMARCA='' WHERE EMPNIT='" & GlobalEmpNit & "' AND ID=" & SelectedCode, cn)
                cmd.ExecuteNonQuery()
                cmd.Dispose()
                cn.Close()
                'Call CargarListadoDocumento(GlobalTipoDoc)

                Me.GridListados.DataSource = Nothing
                Me.GridListados.DataSource = tblDocumentos(Me.cmbTipoDocumento.SelectedValue.ToString)


            End If
        Else
            If FlyoutDialog.Show(Me.ParentForm, New ViewMarcarDoc(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, "NO")) = DialogResult.OK Then

                'Call CargarListadoDocumento(GlobalTipoDoc)

                Me.GridListados.DataSource = Nothing
                Me.GridListados.DataSource = tblDocumentos(Me.cmbTipoDocumento.SelectedValue.ToString)

            End If
        End If

    End Sub

    '** BOTON OBS MARCA *********************
    Private Sub BarButRadMenListadosObsMarca_ItemClick(sender As Object, e As XtraBars.ItemClickEventArgs) Handles BarButRadMenListadosObsMarca.ItemClick
        If SelectedMarcado = "SI" Then
            FlyoutDialog.Show(Me.ParentForm, New ViewMarcarDoc(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, "SI"))

        End If
    End Sub

    '***************************************
    '** BOTON EDITAR ***********************
    '***************************************
    Private Sub BarButRadMenListadosEditar_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButRadMenListadosEditar.ItemClick

        If Confirmacion("¿Está seguro que desea Editar este Documento?, cualquier cambio que le haga afectará el inventario", Me.ParentForm) = True Then
            If FlyoutDialog.Show(Me.ParentForm, New ViewClave(Form1.txtConfigClaveVerificaExistencia.Text)) = DialogResult.OK Then
                Select Case GlobalTipoDoc
                    Case "FAC"
                        If FlyoutDialog.Show(Me.ParentForm, New viewVentasEditar(SelectedCoddoc, SelectedCorrelativo)) = DialogResult.OK Then
                            Call CargarGrid()
                        Else
                            Call CargarGrid()
                        End If


                    Case "COM"
                        MsgBox("Función en construcción, pronto podrás usarla")
                    Case "OCM"
                        MsgBox("Función en construcción, pronto podrás usarla")
                    Case "COR"
                        MsgBox("Función en construcción, pronto podrás usarla")
                    Case "GAS"
                        MsgBox("Función en construcción, pronto podrás usarla")
                    Case "ENT"
                        MsgBox("Función en construcción, pronto podrás usarla")
                    Case "SAL"
                        MsgBox("Función en construcción, pronto podrás usarla")
                    Case Else
                        MsgBox("Función en construcción, pronto podrás usarla")
                End Select

            End If

        End If

    End Sub

    '** BOTON ELIMINAR DOC ***********************
    Private Sub BarButRadMenListadosEliminar_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButRadMenListadosEliminar.ItemClick

        If Confirmacion("¿Está seguro que desea eliminar este Documento?", Me.ParentForm) = True Then
            Dim objDoc As New ClassDocumentos
            If objDoc.verifyCorteDocumento(SelectedCoddoc, SelectedCorrelativo) = True Then
                Aviso("NO PERMITIDO", "Este documento pertence a un corte de caja, por lo que no puede ser eliminado", Me.ParentForm)
                Exit Sub
            End If

            If FlyoutDialog.Show(Me.ParentForm, New ViewClave(Form1.txtConfigClaveVerificaExistencia.Text)) = DialogResult.OK Then

                Select Case GlobalTipoDoc
                    Case "FAC"
                        If SelectedDocConCre = "CRE" Then
                            GoTo ELIMINARFACTURACREDITO
                        Else
                            GoTo ELIMINARDOCUMENTO
                        End If

                    Case "FEF"
                        MsgBox("IMPOSIBLE ELIMINAR UNA FACTURA ELECTRONICA")
                        Exit Sub

                    Case "ENV"
                        GoTo ELIMINARDOCUMENTO
                    Case "COM"
                        GoTo ELIMINARDOCUMENTO
                    Case "OCM"
                        GoTo ELIMINARDOCUMENTO
                    Case "ENT"
                        GoTo ELIMINARDOCUMENTO
                    Case "SAL"
                        GoTo ELIMINARDOCUMENTO

                    Case "TIN"
                        GoTo ELIMINARDOCUMENTO
                    Case "TSL"
                        GoTo ELIMINARDOCUMENTO

                    Case "TES"
                        GoTo ELIMINARDOCUMENTO
                    Case "TSS"
                        GoTo ELIMINARDOCUMENTO

                    Case "COR"
                        GoTo ELIMINARCORTE
                    Case "RCC"
                        GoTo ELIMINARRECIBO
                    Case "RCP"
                        GoTo ELIMINARRECIBOPROVEEDOR

                    Case "ORT"
                        GoTo ELIMINARORDENTRABAJO

                    Case "ORP"
                        GoTo ELIMINARDOCUMENTO

                    Case "INF"
                        GoTo ELIMINARDOCUMENTO
                    Case "DEV"
                        GoTo ELIMINARDOCUMENTO

                End Select


ELIMINARDOCUMENTO:
                Call AbrirConexionSql()
                'OBTIENE LOS DATOS DE LA TABLA DOCPRODUCTO PARA REGRESARLOS O SACARLOS DE INVENTARIO
                Dim cmd2 As New SqlCommand("SELECT CODPROD, TOTALUNIDADES, TOTALBONIF
                                    FROM DOCPRODUCTOS
                                    WHERE (EMPNIT = @EMPNIT) AND (CODDOC = @CODDOC) AND (CORRELATIVO = @CORRELATIVO)", cn)

                cmd2.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
                cmd2.Parameters.AddWithValue("@CODDOC", SelectedCoddoc)
                cmd2.Parameters.AddWithValue("@CORRELATIVO", SelectedCorrelativo)
                Dim dr As SqlDataReader = cmd2.ExecuteReader
                'con el datareader selecciono si es entrada o salida de inventario para hacer lo contrario por la cantidad de unidades que tenga
                Do While dr.Read
                    Select Case GlobalTipoDoc
                        Case "FAC"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call EntradaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "DEV"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call SalidaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "ENV"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call EntradaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "COM"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call SalidaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "OCM"
                            'NO SE DESCUENTA STOCK PORQUE NO ES NECESARIO
                        Case "ENT"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call SalidaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "SAL"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call EntradaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "TIN"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call SalidaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "TSL"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call EntradaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "TES"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call SalidaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "TSS"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Call EntradaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr(1)) + Integer.Parse(dr(2))))
                        Case "ORP"
                            Dim unidadestot As Integer = Integer.Parse(dr(1))
                            If unidadestot > 0 Then
                                Call SalidaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), unidadestot)
                            Else
                                unidadestot = unidadestot * -1
                                Call EntradaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), unidadestot)
                            End If

                        Case "INF"
                            Call ObtenerDatosInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                            Dim unidadestot As Integer = Integer.Parse(dr(1))
                            If unidadestot > 0 Then
                                Call SalidaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), unidadestot)
                            Else
                                unidadestot = unidadestot * -1
                                Call EntradaInventario(dr(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), unidadestot)
                            End If

                    End Select
                Loop
                dr.Close()
                cmd2.Dispose()


                'REGRESO EL SALDO DE LA FACTURA SI EXISTE LA DEVOLUCIÓN
                'FUNCION PARA REGRESAR EL SALDO Y ACTUALIZAR EL STATUS DEL DOC EN DEVOLUCIONES
                If GlobalTipoDoc = "DEV" Then
                    Dim objCxcs As New ClassCxc
                    If objCxcs.DevolverSaldoDevolucion(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo) = True Then

                    End If
                End If



                'LUEGO, ELIMINO EL REGISTRO DE LA TABLA DE DOCUMENTOS Y DOCPRODUCTOS

                Dim cmd As New SqlCommand("DELETE FROM DOCUMENTOS WHERE EMPNIT=@EMPNIT AND CODDOC=@CODDOC AND CORRELATIVO=@CORRELATIVO;
                                            DELETE FROM DOCPRODUCTOS WHERE EMPNIT=@EMPNIT AND CODDOC=@CODDOC AND CORRELATIVO=@CORRELATIVO", cn)

                cmd.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
                cmd.Parameters.AddWithValue("@CODDOC", SelectedCoddoc)
                cmd.Parameters.AddWithValue("@CORRELATIVO", SelectedCorrelativo)
                cmd.ExecuteNonQuery()

                Call CargarGrid()

                'Call Form1.EnviarNotificacionesEmail(0, "Ares te Informa: Eliminación de Documento", "El usuario " & GlobalNomUsuario & " Ha eliminado el documento " & SelectedCoddoc & "-" & SelectedCorrelativo)
                Exit Sub


ELIMINARCORTE:
                Call AbrirConexionSql()
                'elimina el registro en la tabla de cortes
                Dim cmdCor As New SqlCommand("DELETE FROM CORTES WHERE CORRELATIVO=" & SelectedCorrelativo & " AND EMPNIT='" & GlobalEmpNit & "'", cn)
                cmdCor.ExecuteNonQuery()
                cmdCor.Dispose()
                'actualiza todas las facturas con el numero de corte asociado
                Dim cmdUpCor As New SqlCommand("UPDATE DOCUMENTOS SET CORTE='NO', NOCORTE=0 WHERE NOCORTE=" & SelectedCorrelativo & " AND EMPNIT='" & GlobalEmpNit & "'", cn)
                cmdUpCor.ExecuteNonQuery()
                cmdUpCor.Dispose()

                'Call CargarListadoDocumento("COR")
                Call CargarGrid()

                'Call Form1.EnviarNotificacionesEmail(0, "Ares te Informa: Eliminación de Corte de Caja", "El usuario " & GlobalNomUsuario & " Ha eliminado el documento " & SelectedCoddoc & "-" & SelectedCorrelativo)
                Exit Sub

ELIMINARRECIBO:
                Dim objcxc As New ClassCxc
                objcxc.EliminarRecibo(GlobalEmpNit, SelectedNitCliente, SelectedCoddoc, SelectedCorrelativo, SelectedFecha, SelectedDocImporte)
                'Call Form1.EnviarNotificacionesEmail(0, "Ares te Informa: Eliminación de Documento (RECIBO PAGO CLIENTE)", "El usuario " & GlobalNomUsuario & " Ha eliminado el documento " & SelectedCoddoc & "-" & SelectedCorrelativo)
                Call CargarGrid()
                Exit Sub

ELIMINARRECIBOPROVEEDOR:
                Dim objcxp As New classCxp
                objcxp.EliminarRecibo(GlobalEmpNit, SelectedCodcliente, SelectedCoddoc, SelectedCorrelativo, SelectedDocImporte)
                'Call Form1.EnviarNotificacionesEmail(0, "Ares te Informa: Eliminación de Documento (RECIBO PAGO A PROVEEDOR)", "El usuario " & GlobalNomUsuario & " Ha eliminado el documento " & SelectedCoddoc & "-" & SelectedCorrelativo)
                Call CargarGrid()
                Exit Sub

ELIMINARORDENTRABAJO:
                Dim objOrt As New classOrdenTrabajo(GlobalEmpNit)
                objOrt.DeleteOrdenTrabajo(SelectedCoddoc, SelectedCorrelativo)
                Call CargarGrid()
                Exit Sub

ELIMINARFACTURACREDITO:
                Call AbrirConexionSql()
                'OBTIENE LOS DATOS DE LA TABLA DOCPRODUCTO PARA REGRESARLOS O SACARLOS DE INVENTARIO
                Dim cmd7 As New SqlCommand("ELIMINAR_DOCUMENTO_EXISTENCIA", cn)
                cmd7.CommandType = CommandType.StoredProcedure
                cmd7.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
                cmd7.Parameters.AddWithValue("@CODDOC", SelectedCoddoc)
                cmd7.Parameters.AddWithValue("@CORRELATIVO", SelectedCorrelativo)
                Dim dr7 As SqlDataReader = cmd7.ExecuteReader
                'con el datareader selecciono si es entrada o salida de inventario para hacer lo contrario por la cantidad de unidades que tenga
                Do While dr7.Read
                    Call ObtenerDatosInventario(dr7(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue))
                    Call EntradaInventario(dr7(0).ToString, Integer.Parse(Me.cmbAnioDocumento.Text), Integer.Parse(Me.cmbMesDocumento.SelectedValue), (Integer.Parse(dr7(1)) + Integer.Parse(dr7(2))))
                Loop
                dr7.Close()
                cmd7.Dispose()

                'DIMINUYE EL SALDO DEL CLIENTE
                Dim objcxc2 As New ClassCxc
                objcxc2.DisminuirSaldoCliente(GlobalEmpNit, SelectedNitCliente, SelectedDocImporte)

                'LUEGO, ELIMINO EL REGISTRO DE LA TABLA DE DOCUMENTOS Y DOCPRODUCTOS

                Dim cmd8 As New SqlCommand("ELIMINAR_DOCUMENTO", cn)
                cmd8.CommandType = CommandType.StoredProcedure
                cmd8.Parameters.AddWithValue("@EMPNIT", GlobalEmpNit)
                cmd8.Parameters.AddWithValue("@CODDOC", SelectedCoddoc)
                cmd8.Parameters.AddWithValue("@CORRELATIVO", SelectedCorrelativo)
                cmd8.ExecuteNonQuery()

                'Call CargarListadoDocumento(GlobalTipoDoc)
                Call CargarGrid()


                'Call Form1.EnviarNotificacionesEmail(0, "Ares te Informa: Eliminación de Documento", "El usuario " & GlobalNomUsuario & " Ha eliminado el documento " & SelectedCoddoc & "-" & SelectedCorrelativo)
                Exit Sub

            End If
        End If


    End Sub

    '** BOTON ENVIAR EMAIL ***********************
    Private Sub BarButRadMenListadosEmail_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButRadMenListadosEmail.ItemClick

        Dim control As New UCEnviarCotizacion
        FlyoutDialog.Show(Me.ParentForm, control)

    End Sub



    '** BOTON CAMBIAR CAJA ***********************
    Private Sub batButRadMenCambiarCaja_ItemClick(sender As Object, e As XtraBars.ItemClickEventArgs) Handles batButRadMenCambiarCaja.ItemClick
        'selectedcoddoc
        'selectedcorrelativo
        If FlyoutDialog.Show(Me.ParentForm, New viewDocumentosEditCaja(SelectedCoddoc, SelectedCorrelativo)) = DialogResult.OK Then
            Call CargarGrid()

        End If

    End Sub

    '** BOTON CERTIFICAR ***********************
    Private Sub btnMenuCertificar_ItemClick(sender As Object, e As XtraBars.ItemClickEventArgs) Handles btnMenuCertificar.ItemClick

        If SelectedUUDI.Length > 5 Then 'si tiene más de 5 caracteres, es porque ya tiene certificacion

            Call Aviso("AVISO", "Esta factura ya fue Certificada", Me.ParentForm)
            Exit Sub
        End If

        If Confirmacion("¿Está seguro que desea certificar este documento?", Me.ParentForm) = True Then
            Dim objFel As New classFEL
            Select Case Me.cmbTipoDocumento.SelectedValue.ToString
                Case "FEF"
                    Dim f As String = DateTime.Now.ToShortDateString()
                    Dim fel As New classFEL
                    If fel.facturaIVA_Normal(f, SelectedCoddoc, SelectedCorrelativo, SelectedNitCliente, SelectedNomCliente, "", "CIUDAD", "GUATEMALA", "GUATEMALA") = True Then

                        'actualiza los datos FEL del documento
                        GlobalSelectedFEL_UUDI = Strings.Replace(GlobalSelectedFEL_UUDI, " uuid:", "")
                        GlobalSelectedFEL_SERIE = Strings.Replace(GlobalSelectedFEL_SERIE, " serie:", "")
                        GlobalSelectedFEL_NUMERO = Strings.Replace(GlobalSelectedFEL_NUMERO, " numero:", "")

                        GlobalSelectedFEL_FECHA = Strings.Replace(GlobalSelectedFEL_FECHA, Chr(34), "") 'reemplaza las comillas dobles
                        GlobalSelectedFEL_FECHA = Strings.Replace(GlobalSelectedFEL_FECHA, "fecha:", "")

                        'actualiza el documento interno con los datos de FEL
                        If fel.updateDocumentoFEL(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, GlobalSelectedFEL_UUDI, GlobalSelectedFEL_SERIE, GlobalSelectedFEL_NUMERO, GlobalSelectedFEL_FECHA) = True Then
                            Call Form1.Mensaje("Serie FEL asignada a la factura del sistema")
                        Else
                            Call Form1.Mensaje("No se logró actualizar el correlativo en el documento local")
                        End If

                        'abre la página con la factura
                        Process.Start(GlobalInfileUrl + GlobalSelectedFEL_UUDI)

                        Call CargarGrid()
                    Else
                        MsgBox("Error al certificar: " + GlobalDesError)

                    End If

                Case "FEC"
                    Dim f As String = DateTime.Now.ToShortDateString()
                    Dim fvence As Date = Date.Now.AddMonths(2)

                    Dim fel As New classFEL
                    If fel.facturaIVA_Cambiaria(f, SelectedCoddoc, SelectedCorrelativo, SelectedNitCliente, SelectedNomCliente, "", "CIUDAD", "GUATEMALA", "GUATEMALA", fvence, 3) = True Then

                        'actualiza los datos FEL del documento
                        GlobalSelectedFEL_UUDI = Strings.Replace(GlobalSelectedFEL_UUDI, " uuid:", "")
                        GlobalSelectedFEL_SERIE = Strings.Replace(GlobalSelectedFEL_SERIE, " serie:", "")
                        GlobalSelectedFEL_NUMERO = Strings.Replace(GlobalSelectedFEL_NUMERO, " numero:", "")

                        GlobalSelectedFEL_FECHA = Strings.Replace(GlobalSelectedFEL_FECHA, Chr(34), "") 'reemplaza las comillas dobles
                        GlobalSelectedFEL_FECHA = Strings.Replace(GlobalSelectedFEL_FECHA, "fecha:", "")



                        'actualiza el documento interno con los datos de FEL
                        If fel.updateDocumentoFEL(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, GlobalSelectedFEL_UUDI, GlobalSelectedFEL_SERIE, GlobalSelectedFEL_NUMERO, GlobalSelectedFEL_FECHA) = True Then
                            Call Form1.Mensaje("Serie FEL asignada a la factura del sistema")
                        Else
                            Call Form1.Mensaje("No se logró actualizar el correlativo en el documento local")
                        End If

                        'abre la página con la factura
                        Process.Start(GlobalInfileUrl + GlobalSelectedFEL_UUDI)
                    Else
                        MsgBox("Error al certificar: " + GlobalDesError)

                    End If

                Case "FNC"

                    Dim f As String = DateTime.Now.ToShortDateString()
                    Dim fel As New classFEL
                    If fel.notacreditoIVA(f, SelectedCoddoc, SelectedCorrelativo, SelectedNitCliente, SelectedNomCliente, "", "CIUDAD", "GUATEMALA", "GUATEMALA", "DEVOLUCION DE MERCADERIA") = True Then

                        'actualiza los datos FEL del documento
                        GlobalSelectedFEL_UUDI = Strings.Replace(GlobalSelectedFEL_UUDI, " uuid:", "")
                        GlobalSelectedFEL_SERIE = Strings.Replace(GlobalSelectedFEL_SERIE, " serie:", "")
                        GlobalSelectedFEL_NUMERO = Strings.Replace(GlobalSelectedFEL_NUMERO, " numero:", "")

                        GlobalSelectedFEL_FECHA = Strings.Replace(GlobalSelectedFEL_FECHA, Chr(34), "") 'reemplaza las comillas dobles
                        GlobalSelectedFEL_FECHA = Strings.Replace(GlobalSelectedFEL_FECHA, "fecha:", "")

                        'abre la página con la factura
                        Process.Start(GlobalInfileUrl + GlobalSelectedFEL_UUDI)

                        'actualiza el documento interno con los datos de FEL
                        If fel.updateDocumentoFEL(GlobalEmpNit, SelectedCoddoc, SelectedCorrelativo, GlobalSelectedFEL_UUDI, GlobalSelectedFEL_SERIE, GlobalSelectedFEL_NUMERO, GlobalSelectedFEL_FECHA) = True Then
                            Call Form1.Mensaje("Serie FEL asignada a la factura del sistema")
                        Else
                            Call Form1.Mensaje("No se logró actualizar el correlativo en el documento local")
                        End If

                        'abre el reporte imprimible FEL
                        'fel.rptFacturaFEL(docto, correl, GlobalInteger)
                    Else
                        MsgBox("Error al certificar: " + GlobalDesError)
                    End If

                Case Else
                    MsgBox("ESTE DOCUMENTO NO ES ELECTRÓNICO")
            End Select

        End If

    End Sub


    '** BOTON CAMBIAR CLIENTE ***********************
    Private Sub btnMenuCambiarCliente_ItemClick(sender As Object, e As XtraBars.ItemClickEventArgs) Handles btnMenuCambiarCliente.ItemClick

        Select Case GlobalTipoDoc
            Case "COT"
                GoTo TERMINAR
            Case "FAC"
                GoTo TERMINAR
            Case "FEF"
                If SelectedUUDI.Length > 5 Then 'si tiene más de 5 caracteres, es porque ya tiene certificacion
                    Call Aviso("AVISO", "Esta factura ya fue Certificada", Me.ParentForm)
                    Exit Sub
                Else
                    GoTo TERMINAR
                End If
            Case "FEC"
                If SelectedUUDI.Length > 5 Then 'si tiene más de 5 caracteres, es porque ya tiene certificacion
                    Call Aviso("AVISO", "Esta factura ya fue Certificada", Me.ParentForm)
                    Exit Sub
                Else
                    GoTo TERMINAR
                End If
            Case "FES"
                If SelectedUUDI.Length > 5 Then 'si tiene más de 5 caracteres, es porque ya tiene certificacion
                    Call Aviso("AVISO", "Esta factura ya fue Certificada", Me.ParentForm)
                    Exit Sub
                Else
                    GoTo TERMINAR
                End If
            Case Else
                MsgBox("Esta función no aplica a este documento")
                Exit Sub
        End Select


TERMINAR:
        If Confirmacion("¿Está seguro que desea CAMBIAR CLIENTE a este Documento?", Me.ParentForm) = True Then
            If FlyoutDialog.Show(Me.ParentForm, New ViewClave(Form1.txtConfigClaveVerificaExistencia.Text)) = DialogResult.OK Then

                If FlyoutDialog.Show(Me.ParentForm, New viewClientesLista(GlobalEmpNit, "LISTADOS")) = DialogResult.OK Then
                    Dim objDoc As New ClassDocumentos
                    If objDoc.setCodClienteDocumento(SelectedCoddoc, SelectedCorrelativo, SelectedCode, GlobalSelectedNitCliente, GlobalSelectedNomCliente, GlobalSelectedDirCliente) = True Then

                        Call fcn_sendNotification("Cambio de CLIENTE en Documento", String.Format("Se ha cambiado el cliente en el documento {0} - {1}, realizado por el usuario: {2} a las {3} horas", SelectedCoddoc, SelectedCorrelativo, GlobalNomUsuario, Now.Hour.ToString & ":" & Now.Minute.ToString))

                        MsgBox("Cliente cambiado exitosamente!!")

                        Call CargarGrid()
                    Else
                        MsgBox("No se pudocambiar el cliente. Error: " + GlobalDesError)
                    End If
                Else
                    MsgBox("No se seleccionó ningún cliente")
                End If


            End If
        End If

    End Sub

#End Region

End Class
